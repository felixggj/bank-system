name: bank-fullstack

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  BACKEND_WEBAPP_DEV: felixgg-be-dev
  FRONTEND_WEBAPP_DEV: felixgg-fe-dev
  RESOURCE_GROUP_DEV: aguadamillas_students_1
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b

jobs:
  backend-build:
    runs-on: ubuntu-latest
    env:
      ENV: ghci
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
        working-directory: ./backend
      - name: Install dependencies
        run: pip install -r requirements.txt
        working-directory: ./backend
      - name: Lint with flake8
        run: |
          pip install flake8 pytest
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        working-directory: ./backend
      - name: Test with pytest
        run: python -m pytest --cov=iebank_api -v
        working-directory: ./backend
      - name: Upload backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: ./backend

  backend-deploy:
    runs-on: ubuntu-latest
    needs: backend-build
    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: python-app
          path: .
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Azure Web App (Backend)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_WEBAPP_DEV }}
          package: .

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json # Specify the path to your lock file

      - name: npm install, build, and test (Frontend)
        run: |
          cd frontend
          npm install
          npm run build -- --mode development --dest dist-dev

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: node-app-dev
          path: frontend/dist-dev/

  frontend-deploy:
    runs-on: ubuntu-latest
    needs: frontend-build
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: node-app-dev
      - name: List directory contents
        run: ls -la
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Azure Web App (Frontend)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.FRONTEND_WEBAPP_DEV }}
          package: ./node-app-dev/

  infra-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Run Bicep linter
        run: az bicep build --file ./main.bicep
        working-directory: ./infrastructure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Bicep file
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./infrastructure/main.bicep
          parameters: ./infrastructure/parameters/dev.parameters.json appServiceAPIEnvVarENV=${{ vars.ENV }} appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
